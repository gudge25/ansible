- name: Install Zabbix agent
  yum:
    name: "zabbix{{ ZABBIX_AGENT_VERSION }}-agent"
    state: present
    enablerepo: epel

- name: Update Zabbix server address in zabbix_agentd.conf
  lineinfile:
    path: /etc/zabbix_agentd.conf
    regexp: '^Server='
    line: "Server=127.0.0.1,{{ ZABBIX_SERVER }}"
    state: present

- name: Add custom UserParameter to the end of zabbix_agentd.conf
  lineinfile:
    path: /etc/zabbix_agentd.conf
    line: 'UserParameter=custom.mdstat,cat /proc/mdstat | grep -c _'
    insertafter: EOF
    state: present

- name: Enable and start Zabbix agent
  systemd:
    name: zabbix-agent
    enabled: yes
    state: started

- name: Add Zabbix TCP port rule after specific line
  lineinfile:
    path: /etc/sysconfig/iptables
    line: '-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 10050 -j ACCEPT'
    insertafter: '^.*--dport 21064.*$'
    state: present

- name: Restart iptables to apply new rules
  systemd:
    name: iptables
    state: restarted

# If you want to use Username and Password to be authenticated by Zabbix Server
- name: Set credentials to access Zabbix Server API
  ansible.builtin.set_fact:
    ansible_user: "{{ ZABBIX_USER }}"
    ansible_httpapi_pass: "{{ ZABBIX_PASSWORD }}"

- name: Create a new host or rewrite an existing host's info (Zabbix <= 7.0)
# Set task level following variables for Zabbix Server host in task
  vars:
    ansible_network_os: community.zabbix.zabbix
    ansible_connection: httpapi
    ansible_httpapi_port: 443
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    #ansible_zabbix_url_path: "zabbixeu"  # If Zabbix WebUI runs on non-default (zabbix) path ,e.g. http://<FQDN>/zabbixeu
  become: false
  delegate_to: "{{ ZABBIX_SERVER }}" # you can use delegate_to or task level ansible_host like next example
  community.zabbix.zabbix_host:
    host_name: ExampleHost
    visible_name: ExampleName
    description: My ExampleHost Description
    host_groups:
      - Example group1
      - Example group2
    link_templates:
      - Example template1
      - Example template2
    status: enabled
    state: present